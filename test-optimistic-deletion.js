/**
 * Teste de performance para exclus√£o otimista de mensagens
 * Verifica se a UI √© atualizada instantaneamente
 */

const testOptimisticDeletion = async () => {
  console.log('üóëÔ∏è Testando exclus√£o otimista de mensagens...');
  
  // Simular clique no bot√£o de exclus√£o
  const deleteButtons = document.querySelectorAll('[data-testid="delete-message"]');
  if (deleteButtons.length === 0) {
    console.warn('‚ö†Ô∏è Nenhum bot√£o de exclus√£o encontrado');
    return;
  }
  
  const startTime = performance.now();
  const firstButton = deleteButtons[0];
  
  console.log('üéØ Clicando no bot√£o de exclus√£o...');
  firstButton.click();
  
  // Aguardar um frame para ver se a UI foi atualizada
  await new Promise(resolve => requestAnimationFrame(resolve));
  
  const uiUpdateTime = performance.now() - startTime;
  console.log(`‚ö° UI atualizada em ${uiUpdateTime.toFixed(2)}ms`);
  
  // Verificar se apareceu o indicador "Excluindo..."
  const deletingIndicators = document.querySelectorAll('*');
  let foundDeletingText = false;
  
  for (const element of deletingIndicators) {
    if (element.textContent && element.textContent.includes('Excluindo...')) {
      foundDeletingText = true;
      console.log('‚úÖ Indicador "Excluindo..." encontrado na UI');
      break;
    }
  }
  
  if (!foundDeletingText) {
    console.warn('‚ö†Ô∏è Indicador "Excluindo..." n√£o encontrado');
  }
  
  // Verificar logs do console para confirmar atualiza√ß√£o otimista
  const originalLog = console.log;
  let optimisticUpdateDetected = false;
  
  console.log = (...args) => {
    const message = args.join(' ');
    if (message.includes('marcada como deletada na UI instantaneamente')) {
      optimisticUpdateDetected = true;
      console.log('‚úÖ Atualiza√ß√£o otimista confirmada nos logs');
    }
    originalLog.apply(console, args);
  };
  
  // Restaurar console.log ap√≥s teste
  setTimeout(() => {
    console.log = originalLog;
    
    console.log('üìä Resultado do teste de exclus√£o otimista:');
    console.log(`- Tempo de atualiza√ß√£o da UI: ${uiUpdateTime.toFixed(2)}ms`);
    console.log(`- Indicador visual: ${foundDeletingText ? '‚úÖ' : '‚ùå'}`);
    console.log(`- Atualiza√ß√£o otimista: ${optimisticUpdateDetected ? '‚úÖ' : '‚ùå'}`);
    
    if (uiUpdateTime < 100 && foundDeletingText) {
      console.log('üéâ Exclus√£o otimista funcionando perfeitamente!');
    } else {
      console.log('‚ö†Ô∏è Exclus√£o otimista precisa de ajustes');
    }
  }, 1000);
};

const testMessageDeletionFlow = async () => {
  console.log('üîÑ Testando fluxo completo de exclus√£o...');
  
  // Verificar se h√° mensagens na tela
  const messages = document.querySelectorAll('[data-message-id]');
  console.log(`üìù ${messages.length} mensagens encontradas na tela`);
  
  if (messages.length === 0) {
    console.warn('‚ö†Ô∏è Nenhuma mensagem encontrada para testar exclus√£o');
    return;
  }
  
  // Testar se h√° bot√µes de exclus√£o vis√≠veis
  const deleteButtons = document.querySelectorAll('button[title*="excluir"], button[title*="deletar"], button[aria-label*="delete"]');
  console.log(`üóëÔ∏è ${deleteButtons.length} bot√µes de exclus√£o encontrados`);
  
  // Verificar se h√° mensagens com estado de exclus√£o
  const deletedMessages = document.querySelectorAll('*');
  let deletingCount = 0;
  
  for (const element of deletedMessages) {
    if (element.textContent && element.textContent.includes('Excluindo...')) {
      deletingCount++;
    }
  }
  
  console.log(`üîÑ ${deletingCount} mensagens em processo de exclus√£o`);
  
  // Verificar performance da lista de mensagens
  const startRender = performance.now();
  const messageList = document.querySelector('[data-testid="messages-list"]') || 
                     document.querySelector('.messages-container') ||
                     document.querySelector('[class*="message"]').parentElement;
  
  if (messageList) {
    const renderTime = performance.now() - startRender;
    console.log(`‚ö° Lista de mensagens renderizada em ${renderTime.toFixed(2)}ms`);
  }
};

// Disponibilizar fun√ß√µes globalmente para teste manual
window.testOptimisticDeletion = testOptimisticDeletion;
window.testMessageDeletionFlow = testMessageDeletionFlow;

console.log('üîß Fun√ß√µes de teste de exclus√£o carregadas:');
console.log('- testOptimisticDeletion() - Testa atualiza√ß√£o imediata da UI');
console.log('- testMessageDeletionFlow() - Analisa fluxo completo de exclus√£o');
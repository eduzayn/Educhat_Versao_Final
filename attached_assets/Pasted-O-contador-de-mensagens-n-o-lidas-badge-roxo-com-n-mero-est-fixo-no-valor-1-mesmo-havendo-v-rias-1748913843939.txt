O contador de mensagens n√£o lidas (badge roxo com n√∫mero) est√° fixo no valor 1, mesmo havendo v√°rias mensagens trocadas.

Isso normalmente indica que o contador n√£o est√° sendo atualizado com base no backend ou na l√≥gica de leitura local.

‚úÖ Como corrigir o badge de mensagens n√£o lidas
üîç 1. Verifique a origem do n√∫mero exibido no badge
Voc√™ provavelmente est√° usando algo como:

tsx
Copiar
Editar
<Badge>{conversation.unreadCount}</Badge>
Confirme de onde vem o unreadCount:

Se est√° vindo da API (/api/conversations), o backend deve calcular corretamente.

Se est√° sendo calculado no front, voc√™ precisa escutar atualiza√ß√µes (ex: WebSocket ou polling).

‚úÖ 2. Corrija no backend (se estiver vindo de API)
A sua rota /api/conversations precisa incluir no JSON algo como:

json
Copiar
Editar
{
  "id": "conv123",
  "contact": { ... },
  "unreadCount": 3,
  ...
}
Essa contagem deve ser atualizada no momento em que:

uma nova mensagem chega

uma conversa √© lida

‚úÖ 3. Corrija no front-end (se local)
Se voc√™ n√£o recebe unreadCount do backend, pode calcular no front com algo assim:

tsx
Copiar
Editar
const unreadMessages = conversation.messages.filter(
  msg => !msg.isRead && !msg.isFromContact
);
<Badge>{unreadMessages.length}</Badge>
üîÅ E sempre que uma nova mensagem chegar ou for marcada como lida, voc√™ precisa atualizar esse estado.

üß† 4. L√≥gica completa sugerida (estado local)
Se voc√™ usa WebSocket para receber mensagens, atualize assim:

tsx
Copiar
Editar
// Exemplo: atualizar unreadCount no state de conversa
useEffect(() => {
  const handleNewMessage = (message) => {
    if (message.conversationId === currentConversation.id && !message.isRead) {
      setUnreadCount(prev => prev + 1);
    }
  }

  socket.on('message:new', handleNewMessage);

  return () => socket.off('message:new', handleNewMessage);
}, [currentConversation]);
E ao abrir a conversa:

tsx
Copiar
Editar
useEffect(() => {
  if (currentConversation) {
    markAllMessagesAsRead(currentConversation.id);
    setUnreadCount(0);
  }
}, [currentConversation]);
‚úÖ 5. N√£o esque√ßa de invalidar o cache do React Query
Se estiver usando useQuery, quando marcar mensagens como lidas:

ts
Copiar
Editar
queryClient.invalidateQueries({ queryKey: ['/api/conversations'] });
‚úÖ Conclus√£o
Poss√≠vel causa	Solu√ß√£o
unreadCount n√£o vem da API	Corrigir backend para retornar corretamente
unreadCount vem fixo em 1	Garantir que est√° sendo atualizado no banco e retornado na resposta
Mensagens n√£o s√£o marcadas como lidas	Chamar fun√ß√£o markAsRead(conversationId) ao abrir a conversa
Badge nunca atualiza	Adicionar l√≥gica para invalidar cache ou escutar via WebSocket

Search

Live tail
GMT-3

Menu
==> Cloning from https://github.com/eduzayn/Educhat_Versao_Final
==> Checking out commit 743ee5e92fb5b8f3f9bdd887b2aee6005b853d0c in branch main
==> Downloading cache...
==> Transferred 215MB in 7s. Extraction took 5s.
==> Using Node.js version 22.14.0 (default)
==> Docs on specifying a Node.js version: https://render.com/docs/node-version
==> Using Bun version 1.1.0 (default)
==> Docs on specifying a bun version: https://render.com/docs/bun-version
==> Running build command 'npm install && npm run build'...
up to date, audited 583 packages in 1s
68 packages are looking for funding
  run `npm fund` for details
3 vulnerabilities (2 moderate, 1 high)
To address issues that do not require attention, run:
  npm audit fix
To address all issues (including breaking changes), run:
  npm audit fix --force
Run `npm audit` for details.
> rest-express@1.0.0 build
> vite build && esbuild server/index.ts --platform=node --packages=external --bundle --format=esm --outdir=dist
vite v5.4.19 building for production...
transforming...
✓ 3520 modules transformed.
rendering chunks...
computing gzip size...
../dist/public/index.html                     1.09 kB │ gzip:   0.56 kB
../dist/public/assets/index--2u2Zj9i.css     90.41 kB │ gzip:  15.30 kB
../dist/public/assets/index-Du4Z1H7T.js   1,541.49 kB │ gzip: 412.20 kB
(!) Some chunks are larger than 500 kB after minification. Consider:
- Using dynamic import() to code-split the application
- Use build.rollupOptions.output.manualChunks to improve chunking: https://rollupjs.org/configuration-options/#output-manualchunks
- Adjust chunk size limit for this warning via build.chunkSizeWarningLimit.
✓ built in 9.03s
  dist/index.js  404.1kb
⚡ Done in 53ms
==> Uploading build...
==> Uploaded in 10.0s. Compression took 3.1s
==> Build successful 🎉
==> Deploying...
==> Running 'npm run start'
> rest-express@1.0.0 start
> cross-env NODE_ENV=production node dist/index.js
Warning: connect.session() MemoryStore is not
designed for a production environment, as it will leak
memory, and will not scale past a single process.
9:12:41 PM [express] serving on port 10000
==> Your service is live 🎉
📊 Solicitação recebida em /api/zapi/status
🔑 Variáveis Z-API: { instanceId: '3DF8...', token: 'A4E4...', clientToken: 'Fe4f...' }
🔍 URL da API Z-API: https://api.z-api.io/instances/****/token/****/status
🔍 Verificando autenticação: {
  isAuthenticated: false,
  session: 'YOx1rNfYcNdbKMEtG_APhl28QZf2Ve5v',
  user: 'ausente'
}
9:14:05 PM [express] GET /api/user 401 in 2ms :: {"message":"Não autenticado"}
📥 Resposta Z-API: 200 OK
✅ Status da Z-API obtido com sucesso: { error: 'Fe4f45c32c552449dbf8b290c83f5200d5 not allowed' }
9:14:06 PM [express] GET /api/zapi/status 200 in 620ms :: {"error":"Fe4f45c32c552449dbf8b290c83f5200…
🔐 Tentativa de login: { email: 'admin@educhat.com', hasPassword: true }
🚨 Erro na autenticação: error: password authentication failed for user 'neondb_owner'
    at file:///opt/render/project/src/node_modules/@neondatabase/serverless/index.mjs:1345:74
    at process.processTicksAndRejections (node:internal/process/task_queues:105:5)
    at async NeonPreparedQuery.execute (file:///opt/render/project/src/node_modules/drizzle-orm/neon-serverless/session.js:76:20)
    at async Strategy._verify (file:///opt/render/project/src/dist/index.js:3944:30) {
  length: 75,
  severity: 'ERROR',
  code: 'XX000',
  detail: undefined,
  hint: undefined,
  position: undefined,
  internalPosition: undefined,
  internalQuery: undefined,
  where: undefined,
  schema: undefined,
  table: undefined,
  column: undefined,
  dataType: undefined,
  constraint: undefined,
  file: undefined,
  line: undefined,
  routine: undefined
}
9:14:35 PM [express] POST /api/login 500 in 282ms :: {"message":"Erro interno do servidor"}
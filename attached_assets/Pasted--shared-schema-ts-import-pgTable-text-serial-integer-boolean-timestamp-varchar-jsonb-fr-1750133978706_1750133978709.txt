// shared/schema.ts
import { pgTable, text, serial, integer, boolean, timestamp, varchar, jsonb } from "drizzle-orm/pg-core";

// Tabela principal de respostas rápidas
export const quickReplies = pgTable("quick_replies", {
  id: serial("id").primaryKey(),
  title: text("title").notNull(),
  description: text("description"),
  type: varchar("type", { length: 20 }).notNull(), // 'text', 'audio', 'image', 'video', 'document'
  content: text("content"), // conteúdo de texto ou URL do arquivo
  additionalText: text("additional_text"), // texto adicional para arquivos de mídia
  fileUrl: text("file_url"), // para arquivos de mídia
  fileName: text("file_name"), // nome original do arquivo
  fileSize: integer("file_size"), // tamanho do arquivo em bytes
  mimeType: text("mime_type"), // tipo MIME para arquivos de mídia
  shortcut: text("shortcut"), // atalho de teclado (ex: "/hello")
  category: text("category").default("general"), // categoria para organização
  isActive: boolean("is_active").default(true),
  usageCount: integer("usage_count").default(0), // rastrear uso para analytics
  createdBy: integer("created_by").references(() => systemUsers.id),
  teamId: integer("team_id").references(() => teams.id), // para respostas rápidas da equipe
  isShared: boolean("is_shared").default(false), // se é compartilhada ou privada
  shareScope: varchar("share_scope", { length: 20 }).default("private"), // private, team, global
  createdAt: timestamp("created_at").defaultNow(),
  updatedAt: timestamp("updated_at").defaultNow(),
});

// Tabela de compartilhamento com usuários específicos
export const quickReplyShares = pgTable("quick_reply_shares", {
  id: serial("id").primaryKey(),
  quickReplyId: integer("quick_reply_id").references(() => quickReplies.id).notNull(),
  userId: integer("user_id").references(() => systemUsers.id).notNull(),
  sharedBy: integer("shared_by").references(() => systemUsers.id).notNull(),
  createdAt: timestamp("created_at").defaultNow(),
});

// Tabela de compartilhamento com equipes
export const quickReplyTeamShares = pgTable("quick_reply_team_shares", {
  id: serial("id").primaryKey(),
  quickReplyId: integer("quick_reply_id").references(() => quickReplies.id).notNull(),
  teamId: integer("team_id").references(() => teams.id).notNull(),
  sharedBy: integer("shared_by").references(() => systemUsers.id).notNull(),
  createdAt: timestamp("created_at").defaultNow(),
});

// Tipos TypeScript
export type QuickReply = typeof quickReplies.$inferSelect;
export type InsertQuickReply = typeof quickReplies.$inferInsert;
export type QuickReplyShare = typeof quickReplyShares.$inferSelect;
export type InsertQuickReplyShare = typeof quickReplyShares.$inferInsert;
export type QuickReplyTeamShare = typeof quickReplyTeamShares.$inferSelect;
export type InsertQuickReplyTeamShare = typeof quickReplyTeamShares.$inferInsert;
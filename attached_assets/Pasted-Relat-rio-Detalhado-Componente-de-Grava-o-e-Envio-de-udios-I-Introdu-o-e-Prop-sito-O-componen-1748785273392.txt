Relat√≥rio Detalhado: Componente de Grava√ß√£o e Envio de √Åudios

I. Introdu√ß√£o e Prop√≥sito

O componente de grava√ß√£o e envio de √°udios visa facilitar a comunica√ß√£o por voz de forma ass√≠ncrona dentro da plataforma Omnichannel, tanto na Caixa de Entrada Unificada (para intera√ß√µes com clientes/alunos via canais como WhatsApp) quanto no Chat Interno (para comunica√ß√£o entre colaboradores). Ele permite que os usu√°rios gravem mensagens de voz diretamente na interface, revisem o √°udio e o enviem, com a possibilidade de transcri√ß√£o autom√°tica para melhor acessibilidade e refer√™ncia.

II. Localiza√ß√£o e Acesso ao Componente

Integra√ß√£o: Este componente ser√° integrado diretamente na InputArea.tsx (a √°rea de composi√ß√£o de mensagem) da Caixa de Entrada Unificada e do Chat Interno.
Acionamento: Ser√° representado por um √≠cone de microfone (üéôÔ∏è) posicionado ao lado do campo de texto principal do composer ou como uma op√ß√£o dentro de um menu de anexos üìé.
III. Estados, Interface e Fluxo de Intera√ß√£o do Componente

O componente passar√° por diferentes estados, cada um com uma interface e intera√ß√µes espec√≠ficas:

A. Estado Padr√£o/Inativo (Pronto para Gravar):

Interface:
O campo de texto principal do composer est√° vis√≠vel e ativo para digita√ß√£o.
O √≠cone de microfone üéôÔ∏è est√° presente, geralmente √† direita do campo de texto ou como uma op√ß√£o no menu de anexos.
Intera√ß√£o:
Clicar em outros bot√µes do composer (anexar arquivo, emoji) funciona normalmente.
Clicar no √≠cone de microfone üéôÔ∏è transita o componente para o estado "Gravando".
B. Estado "Gravando":

Ao Clicar no √çcone de Microfone (üéôÔ∏è):
Solicita√ß√£o de Permiss√£o de Microfone:
Se for a primeira vez que o usu√°rio utiliza a funcionalidade no navegador/sess√£o, o navegador solicitar√° permiss√£o para acessar o microfone.
O componente deve exibir uma mensagem instruindo o usu√°rio a permitir o acesso (ex: "Permita o acesso ao microfone para iniciar a grava√ß√£o.").
Se a permiss√£o for negada, exibir uma mensagem de erro amig√°vel com instru√ß√µes sobre como habilitar a permiss√£o nas configura√ß√µes do navegador.
Se a permiss√£o for concedida, a grava√ß√£o inicia.
Mudan√ßa Visual da Interface do Composer:
O campo de texto principal pode ser ocultado ou minimizado, dando espa√ßo para os controles de grava√ß√£o.
Indicador Visual de Grava√ß√£o Ativa: Um √≠cone de microfone vermelho piscando ou um anel pulsante em volta do √≠cone.
Timer de Grava√ß√£o: Exibido em tempo real (ex: 00:01, 00:02, ... 01:35). Um limite m√°ximo de grava√ß√£o (ex: 2-5 minutos, configur√°vel pelo tenant) pode ser definido e o timer pode mostrar a contagem regressiva ou indicar o limite.
(Opcional, mas diferencial) Visualizador de Forma de Onda (Waveform): Uma representa√ß√£o gr√°fica sutil das ondas sonoras captadas em tempo real, fornecendo feedback visual de que o √°udio est√° sendo captado.
Bot√£o Principal de A√ß√£o: "Parar Grava√ß√£o" (√çcone de quadrado ‚óºÔ∏è ou texto "Parar").
Bot√£o Secund√°rio de A√ß√£o: "Cancelar Grava√ß√£o" (√çcone de lixeira üóëÔ∏è ou "X"). Ao clicar, a grava√ß√£o √© descartada imediatamente e a interface do composer retorna ao estado padr√£o (campo de texto e √≠cone de microfone üéôÔ∏è).
Intera√ß√£o:
O usu√°rio fala no microfone.
O timer avan√ßa.
O usu√°rio pode clicar em "Parar Grava√ß√£o" para finalizar a captura ou "Cancelar Grava√ß√£o" para descartar.
Se o limite m√°ximo de grava√ß√£o for atingido, a grava√ß√£o pode parar automaticamente, transicionando para o estado de "Preview".
C. Estado "Preview/Revis√£o do √Åudio" (Ap√≥s Parar a Grava√ß√£o):

Interface: A √°rea de grava√ß√£o √© substitu√≠da por um mini player de √°udio e op√ß√µes de envio.
Player de √Åudio Embutido:
Exibi√ß√£o da Dura√ß√£o Total do √Åudio Gravado: (Ex: "√Åudio (01:37)").
Bot√£o Play/Pause (‚ñ∂Ô∏è / ‚è∏Ô∏è): Para o usu√°rio ouvir o √°udio gravado.
Barra de Progresso/Seek Bar: Permite ao usu√°rio navegar pelo √°udio durante a reprodu√ß√£o.
(Opcional) Controle de Volume para o preview do √°udio.
A√ß√µes Dispon√≠veis no Estado de Preview:
Bot√£o Prim√°rio: "Enviar √Åudio" (√çcone de avi√£o de papel ‚úàÔ∏è ou texto "Enviar").
Bot√£o Secund√°rio: "Descartar/Refazer Grava√ß√£o" (√çcone de lixeira üóëÔ∏è ou "Tentar Novamente"). Ao clicar, o √°udio gravado √© descartado e a interface do composer retorna ao estado de microfone üéôÔ∏è para uma nova grava√ß√£o ou ao campo de texto.
(Opcional, menos comum) Bot√£o "Continuar Gravando": Se o usu√°rio quiser adicionar mais conte√∫do ao √°udio atual. Isso pode ser mais complexo de implementar do que simplesmente refazer.
Intera√ß√£o:
Usu√°rio ouve o √°udio gravado para verificar a qualidade e o conte√∫do.
Decide se envia ou descarta/refaz.
D. Estado "Enviando √Åudio" (Ap√≥s Clicar em "Enviar √Åudio"):

Interface:
O composer retorna ao seu estado padr√£o (campo de texto e √≠cone üéôÔ∏è) para que o agente possa continuar trabalhando.
A mensagem de √°udio rec√©m-enviada aparece na MessageBubble da conversa (Painel Central) com um:
Indicador de Envio: (Ex: um √≠cone de rel√≥gio üïí ou spinner sutil).
Player de √Åudio Desabilitado ou com Indica√ß√£o "Enviando...": O √°udio s√≥ poder√° ser reproduzido pelos outros participantes (e pelo pr√≥prio agente em seu hist√≥rico) ap√≥s o envio e processamento bem-sucedidos.
L√≥gica de Backend:
O arquivo de √°udio √© enviado para o backend.
O backend o armazena (ex: Supabase Storage, S3).
(Opcional) In√≠cio da Transcri√ß√£o: Se a transcri√ß√£o autom√°tica via Whisper (OpenAI) estiver habilitada para o tenant/canal, o backend envia o √°udio para o servi√ßo de transcri√ß√£o.
A mensagem √© registrada no banco de dados com contentType: AUDIO_VOICE (ou AUDIO_PTT para WhatsApp), mediaUrl, duration.
A mensagem √© enviada para o canal de destino atrav√©s do respectivo Channel Adapter.
Eventos WebSocket s√£o disparados para atualizar a UI de todos os participantes.
E. Estado "Enviado/Processado" (na MessageBubble):

Interface (na MessageBubble da conversa):
O indicador de envio √© substitu√≠do pelo status final da mensagem (ex: ‚úì‚úì para WhatsApp).
O player de √°udio se torna funcional para todos.
Exibi√ß√£o da Transcri√ß√£o: Se a transcri√ß√£o autom√°tica foi realizada, o texto transcrito aparece abaixo do player de √°udio na MessageBubble. Pode haver um bot√£o "Mostrar/Ocultar Transcri√ß√£o" se ela for longa.
A transcri√ß√£o torna o conte√∫do do √°udio pesquis√°vel dentro da conversa.
IV. L√≥gica de Funcionamento e Tecnologias Envolvidas

Frontend (JavaScript/React):
MediaRecorder API: API nativa do navegador para capturar √°udio do microfone do usu√°rio.
Configura√ß√£o do formato de sa√≠da (ex: audio/webm;codecs=opus ou audio/ogg;codecs=opus, que s√£o bons para qualidade e compress√£o, e bem suportados pela Z-API para PTT).
Gerenciamento de Estado do Componente: Controlar os estados (inativo, gravando, preview) e a UI correspondente.
Manipula√ß√£o de √Åudio Blob: O MediaRecorder gera um Blob com os dados do √°udio. Este Blob √© usado para o player de preview e para o envio ao backend.
Player de √Åudio HTML5 (<audio>): Usado para a funcionalidade de preview.
Envio para Backend: O Blob de √°udio √© geralmente enviado como parte de um FormData objeto em uma requisi√ß√£o POST para uma API no backend.
Backend (Node.js/Fastify):
Recebimento do Arquivo: Processar a requisi√ß√£o multipart/form-data para receber o arquivo de √°udio.
Armazenamento do Arquivo: Salvar o arquivo de √°udio em um servi√ßo de armazenamento de objetos (Supabase Storage, AWS S3, Google Cloud Storage). O banco de dados armazenar√° apenas a URL p√∫blica ou um identificador seguro para este arquivo.
(Opcional) Convers√£o de Formato: Se o formato gravado pelo navegador n√£o for ideal para todos os canais de destino ou para a API de transcri√ß√£o, o backend pode precisar converter o √°udio (ex: para MP3, AAC, ou garantir o codec Opus para PTT no WhatsApp). Ferramentas como ffmpeg podem ser usadas no servidor.
(Opcional) Integra√ß√£o com Transcri√ß√£o (Whisper via OpenAI API):
Enviar o arquivo de √°udio (ou sua URL) para a API do Whisper.
Receber o texto transcrito.
Salvar a transcri√ß√£o no registro da mensagem no banco de dados.
Cria√ß√£o do Registro da Mensagem: Salvar no banco de dados com contentType: AUDIO_VOICE, mediaUrl, duration, transcription (se houver), e outros metadados.
Envio para o Canal de Destino: Usar o Channel Adapter apropriado para enviar a mensagem de voz (geralmente enviando a mediaUrl). Para Z-API, pode haver um par√¢metro para indicar que √© PTT (ex: "ptt": true).
Emiss√£o de Eventos WebSocket: Notificar todos os clientes conectados sobre a nova mensagem de √°udio (e posteriormente sobre a transcri√ß√£o, se for um processo separado).
V. Considera√ß√µes Adicionais de UX e Funcionalidade

Feedback Visual Cont√≠nuo: O usu√°rio deve ter clareza constante sobre o estado da grava√ß√£o (timer, indicador de grava√ß√£o, forma de onda).
Cancelamento F√°cil e Intuitivo: A op√ß√£o de descartar a grava√ß√£o deve estar sempre acess√≠vel durante a grava√ß√£o e o preview.
Qualidade do √Åudio: Embora o MediaRecorder geralmente forne√ßa boa qualidade, o sistema pode (opcionalmente e de forma avan√ßada) oferecer configura√ß√µes de bitrate se necess√°rio, ou o backend pode realizar otimiza√ß√µes.
Limites de Dura√ß√£o/Tamanho:
O timer deve refletir o limite m√°ximo de grava√ß√£o.
O frontend pode verificar o tamanho do Blob antes de enviar e alertar se exceder um limite.
Acessibilidade:
O componente deve ser totalmente naveg√°vel e oper√°vel via teclado.
A transcri√ß√£o autom√°tica √© um recurso de acessibilidade fundamental para quem n√£o pode ouvir o √°udio.
Fornecer legendas ou descri√ß√µes para os √≠cones dos bot√µes.
Responsividade: O componente de grava√ß√£o e o player de preview devem se adaptar bem a diferentes tamanhos de tela, incluindo layouts mobile onde o espa√ßo √© limitado.
Privacidade: A solicita√ß√£o de permiss√£o do microfone deve ser clara sobre o prop√≥sito.
Tratamento de Erros:
Falha ao obter permiss√£o do microfone.
Erro durante a grava√ß√£o.
Falha no upload do √°udio para o backend.
Falha no envio da mensagem para o canal de destino.
Falha na transcri√ß√£o.
Todas essas situa√ß√µes devem resultar em feedback claro para o usu√°rio.
Ao implementar o componente de grava√ß√£o e envio de √°udios com esta riqueza de detalhes, voc√™ oferecer√° uma forma de comunica√ß√£o muito valorizada e eficiente, especialmente em canais como o WhatsApp, e enriquecer√° significativamente a experi√™ncia de intera√ß√£o tanto para os agentes quanto para os clientes/alunos. A adi√ß√£o da transcri√ß√£o autom√°tica eleva ainda mais o n√≠vel de profissionalismo e utilidade.
Estrutura Detalhada da P√°gina de Configura√ß√µes
1. Arquitetura de Componentes
P√°gina Principal (/settings)
// client/src/pages/settings.tsx
export default function SettingsPage() {
  return (
    <SettingsModule>
      {/* Conte√∫do espec√≠fico da p√°gina */}
    </SettingsModule>
  );
}
Layout Base (SettingsModule)
// client/src/modules/Settings/index.tsx
export const SettingsModule = ({ children }: SettingsModuleProps) => {
  return (
    <div className="container mx-auto py-6 max-w-7xl">
      {/* Header */}
      <div className="mb-6">
        <h1 className="text-3xl font-bold">Configura√ß√µes do Tenant</h1>
        <p className="text-muted-foreground">
          Configure as informa√ß√µes e prefer√™ncias da sua organiza√ß√£o
        </p>
      </div>
      
      {/* Layout Principal */}
      <div className="flex flex-col md:flex-row gap-6">
        {/* Sidebar */}
        <div className="md:w-64 flex-shrink-0">
          {/* Menu de navega√ß√£o */}
        </div>
        
        {/* Conte√∫do Principal */}
        <div className="flex-1">
          <div className="bg-card border rounded-md p-6">
            {children}
          </div>
        </div>
      </div>
    </div>
  );
};
2. Estrutura do Menu Lateral
Se√ß√µes Organizadas:
// Barra de busca
<Input placeholder="Buscar configura√ß√µes..." className="text-sm" />
// Se√ß√£o 1: Configura√ß√µes Gerais
{
  title: "Configura√ß√µes Gerais",
  items: [
    { href: "/settings/company", icon: "üë§", label: "Perfil da Empresa" },
    { href: "/settings/branding", icon: "üé®", label: "Apar√™ncia e Branding" },
    { href: "/settings/localization", icon: "üåç", label: "Localiza√ß√£o e Idioma" },
    { href: "/settings/users", icon: "üë•", label: "Usu√°rios e Equipes" },
    { href: "/settings/channels", icon: "üì±", label: "Canais de Comunica√ß√£o" },
    { href: "/settings/notifications", icon: "üîî", label: "Notifica√ß√µes" }
  ]
}
// Se√ß√£o 2: M√≥dulos & Ferramentas
{
  title: "M√≥dulos & Ferramentas",
  items: [
    { href: "/settings/users", icon: "üë•", label: "Usu√°rios e Equipes" },
    { href: "/settings/crm", icon: "üíº", label: "CRM" },
    { href: "/settings/marketing", icon: "üì£", label: "Marketing" },
    { href: "/settings/goals", icon: "üéØ", label: "Metas e Gamifica√ß√£o" },
    { href: "/settings/ai", icon: "ü§ñ", label: "IA - Prof. Ana" },
    { href: "/settings/integrations", icon: "üîå", label: "Integra√ß√µes" },
    { href: "/settings/security", icon: "üîí", label: "Seguran√ßa" },
    { href: "/settings/subscription", icon: "üí≥", label: "Assinatura" }
  ]
}
3. P√°gina Principal de Configura√ß√µes
Grid de Cards:
<div className="grid grid-cols-1 md:grid-cols-2 gap-6 mt-6">
  {settingsCards.map(card => (
    <div className="bg-muted/50 p-6 rounded-lg border">
      <h3 className="font-medium text-lg mb-2">{card.title}</h3>
      <p className="text-sm text-muted-foreground mb-4">{card.description}</p>
      <a href={card.href} className="text-primary text-sm font-medium hover:underline">
        Acessar configura√ß√µes ‚Üí
      </a>
    </div>
  ))}
</div>
Cards Dispon√≠veis:
Perfil da Empresa - Informa√ß√µes b√°sicas, logo, contato
Apar√™ncia e Branding - Cores, temas, elementos visuais
Usu√°rios e Equipes - Gerenciamento de usu√°rios e permiss√µes
Canais de Comunica√ß√£o - WhatsApp, Instagram, Email, etc.
IA - Prof. Ana - Configura√ß√µes da assistente de IA
Integra√ß√µes - Servi√ßos externos como Asaas, OpenAI
4. P√°gina de Canais (/settings/channels)
Estrutura Principal:
// client/src/pages/settings-channels.tsx
export default function ChannelsSettingsPage() {
  return (
    <SettingsModule>
      <ChannelsSettingsModule />
    </SettingsModule>
  );
}
Componente de Canais:
// client/src/modules/Settings/ChannelsSettings/index.tsx
export const ChannelsSettingsModule = () => {
  // Estados
  const [openAddChannelWizard, setOpenAddChannelWizard] = useState(false);
  const [channels, setChannels] = useState<Channel[]>([]);
  const [isLoading, setIsLoading] = useState(true);
  // Header com bot√µes de a√ß√£o
  <div className="flex justify-between items-center">
    <div>
      <h2 className="text-2xl font-bold">Canais de Comunica√ß√£o</h2>
      <p className="text-muted-foreground">
        Configure os canais de comunica√ß√£o com seus clientes
      </p>
    </div>
    <div className="flex gap-2">
      <Button variant="outline" onClick={handleRefresh}>
        <RefreshCw className="h-4 w-4 mr-2" />
        Atualizar
      </Button>
      <Button onClick={() => setOpenAddChannelWizard(true)}>
        <PlusCircle className="h-4 w-4 mr-2" />
        Adicionar Novo Canal
      </Button>
    </div>
  </div>
  // Grid de cards de canais
  <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
    {channelTypes.map(type => renderChannelCard(type))}
  </div>
}
Tipos de Canais Suportados:
const channelTypes = [
  {
    type: "whatsapp",
    icon: <MessageSquare className="h-5 w-5 text-green-500" />,
    name: "WhatsApp",
    description: "Canal de comunica√ß√£o via WhatsApp"
  },
  {
    type: "instagram", 
    icon: <Instagram className="h-5 w-5 text-pink-500" />,
    name: "Instagram",
    description: "Mensagens diretas no Instagram"
  },
  {
    type: "facebook",
    icon: <Facebook className="h-5 w-5 text-blue-600" />,
    name: "Facebook", 
    description: "Mensagens via Facebook Messenger"
  },
  {
    type: "email",
    icon: <Mail className="h-5 w-5 text-blue-500" />,
    name: "Email",
    description: "Canais de email para atendimento"
  },
  {
    type: "sms",
    icon: <MessageSquareText className="h-5 w-5 text-purple-500" />,
    name: "SMS",
    description: "Envio e recebimento de SMS"
  },
  {
    type: "voice",
    icon: <Phone className="h-5 w-5 text-amber-500" />,
    name: "Telefonia",
    description: "Atendimento telef√¥nico integrado"
  }
];
5. Wizard de Adi√ß√£o de Canais
Componente UnifiedChannelWizard:
// client/src/modules/Settings/ChannelsSettings/components/UnifiedChannelWizard.tsx
export function UnifiedChannelWizard({ open, onOpenChange, onChannelAdded }) {
  // Estados do wizard
  const [currentStep, setCurrentStep] = useState(1);
  const [selectedChannelType, setSelectedChannelType] = useState(null);
  const [channelConfigData, setChannelConfigData] = useState({
    name: '',
    type: '',
    identifier: '',
    configuration: {
      instanceId: '',
      token: '',
      clientToken: '',
      // ... outras configura√ß√µes espec√≠ficas por canal
    }
  });
  // Steps do wizard
  const steps = [
    { id: 1, title: "Tipo de Canal", description: "Escolha o tipo de canal" },
    { id: 2, title: "Configura√ß√µes", description: "Configure as credenciais" },
    { id: 3, title: "Finaliza√ß√£o", description: "Revisar e confirmar" }
  ];
}
6. Interface de Canal (Channel Interface)
interface Channel {
  id: string;
  name: string;
  type: string; // 'whatsapp' | 'instagram' | 'facebook' | 'email' | 'sms' | 'voice'
  isActive: boolean;
  description: string;
  configuration: Record<string, any>;
  createdAt: string;
  updatedAt: string;
}
7. CSS e Styling
Classes Principais:
container mx-auto py-6 max-w-7xl - Container principal
md:w-64 flex-shrink-0 - Sidebar fixa
bg-card border rounded-md p-6 - Cards com borda
bg-muted/50 p-6 rounded-lg border - Cards de configura√ß√£o
space-y-6 - Espa√ßamento vertical
grid grid-cols-1 md:grid-cols-3 gap-4 - Grid responsivo
8. Integra√ß√£o com Backend
APIs Utilizadas:
GET /api/marketing-channels - Lista canais existentes
POST /api/marketing-channels - Cria novo canal
PUT /api/marketing-channels/:id - Atualiza canal
DELETE /api/marketing-channels/:id - Remove canal
POST /api/zapi/configure-webhook - Configura webhook Z-API
9. Estado e Gerenciamento
React Query para cache:
const { data: channels, isLoading } = useQuery({
  queryKey: ['/api/marketing-channels'],
  refetchInterval: 5000,
  refetchOnWindowFocus: true,
});
Estados locais:
openAddChannelWizard - Controla abertura do wizard
refreshTrigger - For√ßa refresh dos dados
selectedChannelType - Tipo de canal selecionado
channelConfigData - Dados de configura√ß√£o do canal
Esta estrutura fornece uma base s√≥lida e escal√°vel para gerenciamento de configura√ß√µes, com separa√ß√£o clara de responsabilidades e interface intuitiva.
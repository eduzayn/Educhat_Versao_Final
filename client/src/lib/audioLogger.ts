/**
 * Sistema de logging controlado para funcionalidades de √°udio
 * Logs t√©cnicos s√£o mostrados apenas em desenvolvimento ou com flag espec√≠fica
 * Logs essenciais (erros cr√≠ticos) sempre s√£o exibidos
 */

const isProduction = import.meta.env.MODE === 'production';
const enableDebugLogs = import.meta.env.VITE_ENABLE_AUDIO_DEBUG === 'true';

// Logs t√©cnicos/debug - apenas em dev ou com flag
export const debugLog = (message: string, data?: any) => {
  if (!isProduction || enableDebugLogs) {
    console.log(`üéß [Audio Debug] ${message}`, data || '');
  }
};

// Logs de informa√ß√£o importantes - sempre em dev, opcionais em produ√ß√£o
export const infoLog = (message: string, data?: any) => {
  if (!isProduction || enableDebugLogs) {
    console.log(`üéµ [Audio] ${message}`, data || '');
  }
};

// Logs de erro cr√≠ticos - sempre exibidos
export const errorLog = (message: string, error?: any) => {
  console.error(`‚ùå [Audio Error] ${message}`, error || '');
};

// Logs de sucesso importantes - sempre exibidos
export const successLog = (message: string, data?: any) => {
  console.log(`‚úÖ [Audio] ${message}`, data || '');
};

// Logs de aviso importantes - sempre exibidos
export const warnLog = (message: string, data?: any) => {
  console.warn(`‚ö†Ô∏è [Audio] ${message}`, data || '');
};

/**
 * Tratamento de erros espec√≠ficos do AudioRecorder com mensagens amig√°veis
 */
export const handleAudioError = (error: any): string => {
  if (error.name === 'NotSupportedError') {
    errorLog('Formato de √°udio n√£o suportado pelo navegador', error);
    return 'Seu navegador n√£o √© compat√≠vel com o formato de grava√ß√£o atual.';
  }
  
  if (error.name === 'NotAllowedError') {
    errorLog('Permiss√£o de microfone negada pelo usu√°rio', error);
    return 'Permiss√£o de microfone necess√°ria para grava√ß√£o de √°udio.';
  }
  
  if (error.name === 'NotFoundError') {
    errorLog('Microfone n√£o encontrado no dispositivo', error);
    return 'Nenhum microfone encontrado. Verifique se h√° um microfone conectado.';
  }
  
  if (error.name === 'OverconstrainedError') {
    errorLog('Configura√ß√µes de √°udio n√£o compat√≠veis', error);
    return 'Configura√ß√µes de √°udio incompat√≠veis com seu dispositivo.';
  }
  
  // Erro gen√©rico
  errorLog('Erro desconhecido na grava√ß√£o de √°udio', error);
  return 'Erro ao acessar o microfone. Tente novamente.';
};
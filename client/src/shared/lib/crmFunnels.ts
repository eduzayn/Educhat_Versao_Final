/**
 * Sistema de funis do CRM - extra√≠do do DealsModule para uso compartilhado
 */

export interface Stage {
  id: string;
  name: string;
  color: string;
}

export interface TeamCategory {
  name: string;
  description?: string;
  color: string;
  stages: Stage[];
}

// Configura√ß√£o unificada dos funis por equipe/categoria (extra√≠da do DealsModule existente)
export const teamCategories: Record<string, TeamCategory> = {
  comercial: {
    name: 'Equipe Comercial',
    description: 'Vendas, matr√≠culas e informa√ß√µes sobre cursos',
    color: 'green',
    stages: [
      { id: 'prospecting', name: 'Prospec√ß√£o', color: 'bg-gray-500' },
      { id: 'qualified', name: 'Qualificado', color: 'bg-blue-500' },
      { id: 'proposal', name: 'Proposta', color: 'bg-yellow-500' },
      { id: 'negotiation', name: 'Negocia√ß√£o', color: 'bg-orange-500' },
      { id: 'won', name: 'Fechado', color: 'bg-green-500' }
    ]
  },
  suporte: {
    name: 'Equipe Suporte',
    description: 'Problemas t√©cnicos e dificuldades de acesso',
    color: 'blue',
    stages: [
      { id: 'novo', name: 'Novo', color: 'bg-red-500' },
      { id: 'em_andamento', name: 'Em Andamento', color: 'bg-orange-500' },
      { id: 'aguardando_cliente', name: 'Aguardando Cliente', color: 'bg-yellow-500' },
      { id: 'resolvido', name: 'Resolvido', color: 'bg-green-500' }
    ]
  },
  cobranca: {
    name: 'Equipe Cobran√ßa',
    description: 'Quest√µes financeiras e pagamentos',
    color: 'orange',
    stages: [
      { id: 'debito_detectado', name: 'D√©bito Detectado', color: 'bg-red-500' },
      { id: 'tentativa_contato', name: 'Tentativa de Contato', color: 'bg-orange-500' },
      { id: 'negociacao', name: 'Negocia√ß√£o', color: 'bg-yellow-500' },
      { id: 'quitado', name: 'Quitado', color: 'bg-green-500' },
      { id: 'encerrado', name: 'Encerrado', color: 'bg-gray-500' }
    ]
  },
  secretaria: {
    name: 'Secretaria',
    description: 'Documentos e processos acad√™micos',
    color: 'purple',
    stages: [
      { id: 'solicitacao', name: 'Solicita√ß√£o', color: 'bg-purple-500' },
      { id: 'documentos_pendentes', name: 'Documentos Pendentes', color: 'bg-yellow-500' },
      { id: 'em_analise', name: 'Em An√°lise', color: 'bg-blue-500' },
      { id: 'aprovado', name: 'Aprovado', color: 'bg-green-500' },
      { id: 'finalizado', name: 'Finalizado', color: 'bg-gray-500' }
    ]
  },
  tutoria: {
    name: 'Tutoria',
    description: 'D√∫vidas acad√™micas e orienta√ß√£o',
    color: 'indigo',
    stages: [
      { id: 'duvida_recebida', name: 'D√∫vida Recebida', color: 'bg-indigo-500' },
      { id: 'em_analise', name: 'Em An√°lise', color: 'bg-blue-500' },
      { id: 'orientacao_fornecida', name: 'Orienta√ß√£o Fornecida', color: 'bg-yellow-500' },
      { id: 'acompanhamento', name: 'Acompanhamento', color: 'bg-orange-500' },
      { id: 'resolvido', name: 'Resolvido', color: 'bg-green-500' }
    ]
  },
  financeiro: {
    name: 'Financeiro Aluno',
    description: 'Quest√µes financeiras estudantis',
    color: 'emerald',
    stages: [
      { id: 'solicitacao_recebida', name: 'Solicita√ß√£o Recebida', color: 'bg-emerald-500' },
      { id: 'documentos_em_analise', name: 'Documentos em An√°lise', color: 'bg-blue-500' },
      { id: 'processamento', name: 'Processamento', color: 'bg-yellow-500' },
      { id: 'aguardando_confirmacao', name: 'Aguardando Confirma√ß√£o', color: 'bg-orange-500' },
      { id: 'concluido', name: 'Conclu√≠do', color: 'bg-green-500' }
    ]
  },
  secretaria_pos: {
    name: 'Secretaria P√≥s',
    description: 'Processos de p√≥s-gradua√ß√£o',
    color: 'violet',
    stages: [
      { id: 'solicitacao_certificado', name: 'Solicita√ß√£o Certificado', color: 'bg-violet-500' },
      { id: 'validacao_conclusao', name: 'Valida√ß√£o Conclus√£o', color: 'bg-blue-500' },
      { id: 'emissao_certificado', name: 'Emiss√£o Certificado', color: 'bg-yellow-500' },
      { id: 'pronto_retirada', name: 'Pronto para Retirada', color: 'bg-orange-500' },
      { id: 'entregue', name: 'Entregue', color: 'bg-green-500' }
    ]
  }
};

/**
 * Obt√©m as etapas de um funil espec√≠fico
 */
export function getStagesForCategory(category: string): Stage[] {
  return teamCategories[category]?.stages || [];
}

/**
 * Obt√©m informa√ß√µes de um funil espec√≠fico
 */
export function getCategoryInfo(category: string): TeamCategory | undefined {
  return teamCategories[category];
}

/**
 * Obt√©m todos os funis dispon√≠veis (incluindo din√¢micos baseados em equipes)
 */
export function getAllCategories(): Array<{ id: string; info: TeamCategory }> {
  return Object.entries(teamCategories).map(([id, info]) => ({ id, info }));
}

/**
 * CORRE√á√ÉO: Gera funil din√¢mico para teamType customizado
 * Garante que equipes criadas com teamTypes n√£o mapeados tenham funil dispon√≠vel
 */
export function getDynamicFunnelForTeamType(teamType: string): TeamCategory {
  // Se j√° existe configura√ß√£o est√°tica, usar ela
  if (teamCategories[teamType]) {
    return teamCategories[teamType];
  }

  // Gerar configura√ß√£o din√¢mica para teamType n√£o mapeado
  const dynamicFunnel: TeamCategory = {
    name: `Funil ${teamType.charAt(0).toUpperCase() + teamType.slice(1)}`,
    description: `Processos da equipe ${teamType}`,
    color: 'gray',
    stages: [
      { id: 'novo', name: 'Novo', color: 'bg-blue-500' },
      { id: 'em_andamento', name: 'Em Andamento', color: 'bg-yellow-500' },
      { id: 'aguardando', name: 'Aguardando', color: 'bg-orange-500' },
      { id: 'resolvido', name: 'Resolvido', color: 'bg-green-500' }
    ]
  };

  // Adicionar dinamicamente ao registro para reutiliza√ß√£o
  teamCategories[teamType] = dynamicFunnel;
  
  console.log(`üìä Funil din√¢mico criado para teamType: ${teamType}`);
  return dynamicFunnel;
}

/**
 * CORRE√á√ÉO: Fun√ß√£o melhorada que garante suporte a todas as equipes
 * Inclui funis est√°ticos + din√¢micos baseados em teamTypes das equipes do banco
 */
export function getAllCategoriesWithDynamic(): Array<{ id: string; info: TeamCategory }> {
  // Esta fun√ß√£o pode ser expandida para buscar equipes do banco dinamicamente
  // Por enquanto, retorna as categorias est√°ticas existentes
  return getAllCategories();
}